sapply(jagsdat$maxdose, MARGIN=1, FUN=function(x) {c(NA, rep(3, x-1))})
sapply(jagsdat$maxdose, FUN=function(x) {c(NA, rep(3, x-1))})
unlist(sapply(jagsdat$maxdose, FUN=function(x) {c(NA, rep(3, x-1))}))
matrix(sapply(jagsdat$maxdose, FUN=function(x) {c(NA, rep(3, x-1))}))
matrix(sapply(jagsdat$maxdose, FUN=function(x) {c(NA, rep(3, x-1))}), ncol=4)
matrix(unlist(sapply(jagsdat$maxdose, FUN=function(x) {c(NA, rep(3, x-1))})), ncol=4)
matrix(unlist(sapply(jagsdat$maxdose, FUN=function(x) {c(NA, rep(3, x-1))})), ncol=6)
matrix(unlist(sapply(jagsdat$maxdose, FUN=function(x) {c(NA, rep(3, x-1))})), ncol=6, byrow = TRUE)
jagsdat$maxdose
unlist(sapply(jagsdat$maxdose, FUN=function(x) {
val <- x-1
c(NA, rep(3, val), rep(NA, 6-(val)))}))
sapply(jagsdat$maxdose, FUN=function(x) {
val <- x-1
c(NA, rep(3, val), rep(NA, 6-(val)))}))
sapply(jagsdat$maxdose, FUN=function(x) {
val <- x-1
c(NA, rep(3, val), rep(NA, 6-(val)))})
t(sapply(jagsdat$maxdose, FUN=function(x) {
val <- x-1
c(NA, rep(3, val), rep(NA, 6-(val)))}))
t(sapply(jagsdat$maxdose, FUN=function(x) {
val <- x-1
c(NA, rep(3, val), rep(NA, 6-(val-1)))}))
t(sapply(jagsdat$maxdose, FUN=function(x) {
val <- x-1
c(NA, rep(3, val), rep(NA, 6-(val+1)))}))
init1 <- list("d.1"=
t(sapply(jagsdat$maxdose, FUN=function(x) {
val <- x-1
c(NA, rep(3, val), rep(NA, 6-(val+1)))}))
)
R2jags::jags(data=jagsdat, parameters.to.save = "d.1", model.file = "~/Downloads/drnma.jags",
inits=list(init1, init1, init1))
init1
R2jags::jags(data=jagsdat, parameters.to.save = "d.1", model.file = "~/Downloads/drnma.jags")
R2jags::jags(data=jagsdat, parameters.to.save = "d.1", model.file = "~/Downloads/drnma.jags",
inits=list(init1, init1, init1))
R2jags::jags(data=jagsdat, parameters.to.save = "d.1", model.file = "~/Downloads/drnma.jags",
inits=list(init1), n.chains = 1)
R2jags::jags(data=jagsdat, parameters.to.save = "d.1", model.file = "~/Downloads/drnma.jags",
inits=init1, n.chains = 1)
R2jags::jags(data=jagsdat, parameters.to.save = "d.1", model.file = "~/Downloads/drnma.jags",
inits=list(init1), n.chains = 1)
jagsdat$maxdose
init1
init1 <- list("d.1"=
sapply(jagsdat$maxdose, FUN=function(x) {
val <- x-1
c(NA, rep(3, val), rep(NA, 6-(val+1)))})
)
init1
R2jags::jags(data=jagsdat, parameters.to.save = "d.1", model.file = "~/Downloads/drnma.jags",
inits=list(init1), n.chains = 1)
?R2jags::jags
init1 <- list("d.1"=
sapply(jagsdat$maxdose, FUN=function(x) {
val <- x-1
c(NA, rep(3, val), rep(NA, max(jagsdat$maxdose)-(val+1)))})
)
init1
dunif(-10,10)
dunif(5,-10,10)
dunif(5,-10,10)
dunif(5,-10,10)
?dunif
runif(5,-10,10)
runif(0,5,10)
runif(1,0,5)
start <- runif(1,0,5)
seq(start, start+runif(1,0,5))
seq(start, start+runif(1,0,5))
?seq
seq(start, start+runif(1,0,5), length.out = 3)
seq(start, start+runif(1,0,5), length.out = 5)
sapply(jagsdat$maxdose, FUN=function(x) {
val <- x-1
start <- runif(1,0,3)
c(NA, seq(start, start+runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))})
"d.1"=
sapply(jagsdat$maxdose, FUN=function(x, fun="nonparam.up") {
val <- x-1
if (fun=="nonparam.up") {
c(NA, seq(0, 0+runif(1,0,5), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
} else if (fun=="nonparam.down")
c(NA, seq(0, 0-runif(1,0,5), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
})
sapply(jagsdat$maxdose, FUN=function(x, fun="nonparam.up") {
val <- x-1
if (fun=="nonparam.up") {
c(NA, seq(0, 0+runif(1,0,5), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
} else if (fun=="nonparam.down")
c(NA, seq(0, 0-runif(1,0,5), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
})
sapply(jagsdat$maxdose, FUN=function(x, fun="nonparam.down") {
val <- x-1
if (fun=="nonparam.up") {
c(NA, seq(0, 0+runif(1,0,5), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
} else if (fun=="nonparam.down")
c(NA, seq(0, 0-runif(1,0,5), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
})
sapply(jagsdat$maxdose, FUN=function(x, fun=fun) {
val <- x-1
if (fun=="nonparam.up") {
start <- runif(1,0,3)
c(NA, seq(start, start+runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
} else if (fun=="nonparam.down")
start <- runif(1,0,-3)
c(NA, seq(start, start-runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
})
sapply(jagsdat$maxdose, FUN=function(x, fun="nonparam.up") {
val <- x-1
if (fun=="nonparam.up") {
start <- runif(1,0,3)
c(NA, seq(start, start+runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
} else if (fun=="nonparam.down")
start <- runif(1,0,-3)
c(NA, seq(start, start-runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
})
sapply(jagsdat$maxdose, FUN=function(x, fun="nonparam.up") {
val <- x-1
if (fun=="nonparam.up") {
start <- runif(1,0,3)
c(NA, seq(start, start+runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
} else if (fun=="nonparam.down")
start <- runif(1,0,-3)
c(NA, seq(start, start-runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
})
runif(1,0,-3)
runif(1,0,-3)
start <- runif(1,-3,0)
runif(1,-3,0)
runif(1,-3,0)
runif(1,-3,0)
runif(1,-3,0)
runif(1,-3,0)
runif(1,-3,0)
runif(1,0,3)
runif(1,0,3)
runif(1,0,3)
runif(1,0,3)
runif(1,0,3)
runif(1,0,3)
runif(1,0,3)
runif(1,0,3)
sapply(jagsdat$maxdose, FUN=function(x, fun=fun) {
val <- x-1
if (fun=="nonparam.up") {
start <- runif(1,0,3)
c(NA, seq(start, start+runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
} else if (fun=="nonparam.down")
start <- runif(1,-3,0)
c(NA, seq(start, start-runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
})
sapply(jagsdat$maxdose, FUN=function(x, fun="nonparam.up") {
val <- x-1
if (fun=="nonparam.up") {
start <- runif(1,0,3)
c(NA, seq(start, start+runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
} else if (fun=="nonparam.down")
start <- runif(1,-3,0)
c(NA, seq(start, start-runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
})
sapply(jagsdat$maxdose, FUN=function(x, fun="nonparam.down") {
val <- x-1
if (fun=="nonparam.up") {
start <- runif(1,0,3)
c(NA, seq(start, start+runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
} else if (fun=="nonparam.down")
start <- runif(1,-3,0)
c(NA, seq(start, start-runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
})
start <- runif(1,0,3)
start+runif(1,0,3)
start
seq(start, start+runif(1,0,3), length.out=val)
seq(start, start+runif(1,0,3), length.out=5)
sapply(jagsdat$maxdose, FUN=function(x, fun="nonparam.up") {
val <- x-1
if (fun=="nonparam.up") {
start <- runif(1,0,3)
c(NA, seq(start, start+runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
} else if (fun=="nonparam.down")
start <- runif(1,-3,0)
c(NA, seq(start, start-runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
})
list("d.1"=
sapply(jagsdat$maxdose, FUN=function(x, fun=fun) {
val <- x-1
if (fun=="nonparam.up") {
start <- runif(1,0,3)
c(NA, seq(start, start+runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
} else if (fun=="nonparam.down")
start <- runif(1,-3,0)
c(NA, seq(start, start-runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
})
)
jagsdat
gen.init <- function(jagsdat, fun) {
sapply(jagsdat$maxdose, FUN=function(x, fun=fun) {
val <- x-1
if (fun=="nonparam.up") {
start <- runif(1,0,3)
c(NA, seq(start, start+runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
} else if (fun=="nonparam.down")
start <- runif(1,-3,0)
c(NA, seq(start, start-runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
})
}
gen.init(jagsdat, fun="nonparam.up")
gen.init <- function(jagsdat, fun) {
sapply(jagsdat$maxdose, FUN=function(x, direction=fun) {
val <- x-1
if (direction=="nonparam.up") {
start <- runif(1,0,3)
c(NA, seq(start, start+runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
} else if (direction=="nonparam.down")
start <- runif(1,-3,0)
c(NA, seq(start, start-runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
})
}
gen.init(jagsdat, fun="nonparam.up")
gen.init(jagsdat, fun="nonparam.down")
gen.init(jagsdat, fun="nonparam.down")
gen.init(jagsdat, fun="nonparam.down")
gen.init(jagsdat, fun="nonparam.down")
gen.init(jagsdat, fun="nonparam.up")
gen.init(jagsdat, fun="nonparam.up")
gen.init(jagsdat, fun="nonparam.up")
gen.init(jagsdat, fun="nonparam.up")
gen.init(jagsdat, fun="nonparam.up")
gen.init(jagsdat, fun="nonparam.up")
gen.init <- function(jagsdat, fun) {
sapply(jagsdat$maxdose, FUN=function(x, direction=fun) {
val <- x-1
if (direction=="nonparam.up") {
start <- runif(1,0,3)
c(NA, seq(start, start-runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
} else if (direction=="nonparam.down")
start <- runif(1,-3,0)
c(NA, seq(start, start-runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
})
}
gen.init(jagsdat, fun="nonparam.up")
gen.init(jagsdat, fun="nonparam.up")
gen.init(jagsdat, fun="nonparam.up")
gen.init(jagsdat, fun="nonparam.up")
gen.init(jagsdat, fun="nonparam.up")
gen.init <- function(jagsdat, fun) {
sapply(jagsdat$maxdose, FUN=function(x, direction=fun) {
val <- x-1
if (direction=="nonparam.up") {
start <- runif(1,0,3)
c(NA, seq(start, start+runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
} else if (direction=="nonparam.down")
start <- runif(1,-3,0)
c(NA, seq(start, start-runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
})
}
gen.init <- function(jagsdat, fun) {
sapply(jagsdat$maxdose, FUN=function(x, direction=fun) {
val <- x-1
if (direction=="nonparam.up") {
start <- runif(1,0,3)
c(NA, seq(start, start+runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
} else if (direction=="nonparam.down") {
start <- runif(1,-3,0)
c(NA, seq(start, start-runif(1,0,3), length.out=val), rep(NA, max(jagsdat$maxdose)-(val+1)))
}
})
}
gen.init(jagsdat, fun="nonparam.up")
gen.init(jagsdat, fun="nonparam.up")
gen.init(jagsdat, fun="nonparam.up")
gen.inits <- function(jagsdat, fun, n.chain) {
if ("maxdose" %in% names(jagsdat)) {
inits <- list()
for (i in 1:n.chain) {
inits[[length(inits)+1]] <- list("d.1"=gen.init(jagsdat, fun))
}
}
return(inits)
}
gen.inits(jagsdat, fun="nonparam.up", n.chain=3)
gen.inits <- function(jagsdat, fun, n.chain) {
if ("maxdose" %in% names(jagsdat)) {
inits <- list()
for (i in 1:n.chain) {
inits[[length(inits)+1]] <- list("d.1"=gen.init(jagsdat, fun))
}
}
return(inits)
}
?...
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up")
testfun <- function(x, ...) {
print(x)
print(...)
}
testfun(5)
testfun(5, 6)
testfun(5, rabbits=6)
testfun <- function(x, ...) {
print(x)
print(rabbits)
}
testfun(5, rabbits=6)
testfun <- function(x, ...) {
print(x)
print(...[["rabbits"]])
}
testfun(5, rabbits=6)
testfun <- function(x, ...) {
print(x)
print(as.list(substitute(list(...)))[-1L])
}
testfun(5, rabbits=6)
testfun <- function(x, ...) {
print(x)
temp <- as.list(substitute(list(...)))[-1L]
if ("rabbits" %in% names(temp)) {
print(temp$rabbits)
}
}
testfun(5, rabbits=6)
testfun <- function(x, ...) {
print(x)
print(as.list(substitute(list(...))))
temp <- as.list(substitute(list(...)))[-1L]
if ("rabbits" %in% names(temp)) {
print(temp$rabbits)
}
}
testfun(5, rabbits=6)
testfun <- function(x, ...) {
print(x)
print(substitute(list(...)))
temp <- as.list(substitute(list(...)))[-1L]
if ("rabbits" %in% names(temp)) {
print(temp$rabbits)
}
}
testfun(5, rabbits=6)
testfun <- function(x, ...) {
print(x)
substitute(list(...))
temp <- as.list(substitute(list(...)))[-1L]
if ("rabbits" %in% names(temp)) {
print(temp$rabbits)
}
}
testfun(5, rabbits=6)
testss <- testfun(5, rabbits=6)
testss
testfun <- function(x, ...) {
print(x)
substitute(list(...))
# temp <- as.list(substitute(list(...)))[-1L]
# if ("rabbits" %in% names(temp)) {
#   print(temp$rabbits)
# }
}
testss
testss <- testfun(5, rabbits=6)
testss
class(testss)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up")
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up")
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up")
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=3)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=3)
nonparam <- mbnma.run(network, fun="nonparam.up", inits=list(1,4,234))
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", inits=list(1,4,234))
R2jags::jags(data=jagsdat, parameters.to.save = "d.1", model.file = "~/Downloads/drnma.jags",
inits=list(init1), n.chains = 1)
R2jags::jags(data=jagsdat, parameters.to.save = "d.1", model.file = "~/Downloads/drnma.jags",
n.chains = 1)
nonparam <- mbnma.run(network, fun="nonparam.up", inits=list(1,4,234))
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", inits=list(1,4,234))
nonparam <- mbnma.run(network, fun="nonparam.up")
nonparam
plot(nonparam)
nma.run(network)
nonparam <- mbnma.run(network, fun="nonparam.up")
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up")
nonparam
plot(nonparam)
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1, inits=list("totresdev"=0))
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1, inits=list("totresdev"=0))
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1, inits=list("totresdev"=0))
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1, inits=list("totresdev"=0))
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1, inits=list("totresdev"=0))
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1, inits=list("totresdev"=0))
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1, inits=list("totresdev"=0))
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1, inits=list("totresdev"=0))
nonparam
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
nonparam
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1, inits=list("totresdev"=0))
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1, inits=list("totresdev"=0))
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1, inits=list("totresdev"=0))
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1, inits=list("totresdev"=0))
nonparam <- mbnma.run(network, fun="emax", n.chains=1, inits=list("totresdev"=0))
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="emax", n.chains=1, inits=list("totresdev"=0))
nonparam <- mbnma.run(network, fun="emax", n.chains=1)
nonparam <- mbnma.run(network, fun="emax", n.chains=1, inits=list(list("totresdev"=0)))
nonparam <- mbnma.run(network, fun="emax", n.chains=1, inits=list(list("sd"=0.5)), method="random")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
HelloWorld <- function(...) {
arguments <- list(...)
paste(arguments)
}
HelloWorld(x=5)
HelloWorld(x=5, 23)
HelloWorld(x=5, rabbit=23)
HelloWorld <- function(...) {
arguments <- list(...)
paste(names(arguments))
}
HelloWorld(x=5, rabbit=23)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
nonparam <- mbnma.run(network, fun="emax", n.chains=1, inits=list(list("sd"=0.5)), method="random")
?do.call
args
a <- list(3,4,6)
b <0 list("wwer", "erwe")
b <- list("wwer", "erwe")
c(a,b)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1, method="random", inits=list("sd"=0.5))
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1, method="random", inits=list(list("sd"=0.5)))
nonparam <- mbnma.run(network, fun="emax", n.chains=1, method="random", inits=list(list("sd"=0.5)))
nonparam <- mbnma.run(network, fun="emax", n.chains=1, method="random", inits=list(list("sd"=0.5)))
nonparam <- mbnma.run(network, fun="emax", n.chains=1, method="random")
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="emax", n.chains=1, method="random")
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="emax", n.chains=1, method="random")
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="emax", n.chains=1, method="random")
nonparam <- mbnma.run(network, fun="emax", n.chains=1, method="random", inits=list(list("sd"=0.5)))
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up", n.chains=1)
devtools::load_all(".")
nonparam <- mbnma.run(network, fun="nonparam.up")
plot(nonparam)
nonparam <- mbnma.run(network, fun="nonparam.down")
nonparam
plot(nonparam)
